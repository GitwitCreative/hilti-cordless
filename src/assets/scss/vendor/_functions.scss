/// Convert angle
/// @author Chris Eppstein
/// @param {Number} $value - Value to convert
/// @param {String} $unit - Unit to convert to
/// @return {Number} Converted angle
@function convert-angle($value, $unit) {
    $convertable-units: deg grad turn rad;
    $conversion-factors: 1 (10grad/9deg) (1turn/360deg) (3.1415926rad/180deg);
    @if index($convertable-units, unit($value)) and index($convertable-units, $unit) {
        @return $value
             / nth($conversion-factors, index($convertable-units, unit($value)))
             * nth($conversion-factors, index($convertable-units, $unit));
    }

    @warn "Cannot convert `#{unit($value)}` to `#{$unit}`.";
}

/// Test if `$value` is an angle
/// @param {*} $value - Value to test
/// @return {Bool}
@function is-direction($value) {
    $is-direction: index((to top, to top right, to right top, to right, to bottom right, to right bottom, to bottom, to bottom left, to left bottom, to left, to left top, to top left), $value);
    $is-angle: type-of($value) == 'number' and index('deg' 'grad' 'turn' 'rad', unit($value));

    @return $is-direction or $is-angle;
}

/// Convert a direction to legacy syntax
/// @param {Keyword | Angle} $value - Value to convert
/// @require {function} is-direction
/// @require {function} convert-angle
@function legacy-direction($value) {
    @if is-direction($value) == false {
        @warn "Cannot convert `#{$value}` to legacy syntax because it doesn't seem to be an angle or a direction";
    }

    $conversion-map: (
            to top : bottom,
            to top right : bottom left,
            to right top : left bottom,
            to right : left,
            to bottom right : top left,
            to right bottom : left top,
            to bottom : top,
            to bottom left : top right,
            to left bottom : right top,
            to left : right,
            to left top : right bottom,
            to top left : bottom right
    );

    @if map-has-key($conversion-map, $value) {
        @return map-get($conversion-map, $value);
    }

    @return 90deg - convert-angle($value, 'deg');
}

/* ==========================================================================

   Colors

   ========================================================================== */

@function color($key) {
  @if map-has-key($colors, $key) {
    @return map-get($colors, $key);
  }

  @warn "Unknown `#{$key}` in $colors.";
  @return null;
}

/* ==========================================================================

   Box Shadows

   ========================================================================== */

@function boxshadow($key) {
  @if map-has-key($boxshadows, $key) {
    @return map-get($boxshadows, $key);
  }

  @warn "Unknown `#{$key}` in $boxshadows.";
  @return null;
}

/* ==========================================================================

   Borders

   ========================================================================== */

@function border($key) {
  @if map-has-key($borders, $key) {
    @return map-get($borders, $key);
  }

  @warn "Unknown `#{$key}` in $borders.";
  @return null;
}


/* ==========================================================================

   Fonts

   ========================================================================== */

@function font($key) {
  @if map-has-key($fonts, $key) {
    @return map-get($fonts, $key);
  }

  @warn "Unknown `#{$key}` in $fonts.";
  @return null;
}

@function fontSize($key) {
  @if map-has-key($fontSizes, $key) {
    @return map-get($fontSizes, $key);
  }

  @warn "Unknown `#{$key}` in $fontSizes.";
  @return null;
}


/* ==========================================================================

   Timings

   ========================================================================== */

@function ms($key) {
  @if map-has-key($timings, $key) {
    @return map-get($timings, $key);
  }

  @warn "Unknown `#{$key}` in $timings.";
  @return null;
}


/* ==========================================================================

   Z-Index

   ========================================================================== */

@function z($key) {
  @if map-has-key($z-layers, $key) {
    @return map-get($z-layers, $key);
  }

  @warn "Unknown `#{$key}` in $z-layers.";
  @return null;
}

// Examples
// .overlay {
//   z-index: z(overlay);
// }

// .element {
//   z-index: (z(default) + 1);
// }


$prefix:'-moz-', '-webkit-', '-o-', '-ms-', '';

// ********************
// fadeIn
// ********************

@mixin keyframe-fadeIn {
  0%   { opacity:0; }
  100% { opacity:1; }
}
@-moz-keyframes fadeIn {
  @include keyframe-fadeIn;
}
@-webkit-keyframes fadeIn {
  @include keyframe-fadeIn;
}
@-o-keyframes fadeIn {
  @include keyframe-fadeIn;
}
@-ms-keyframes fadeIn {
  @include keyframe-fadeIn;
}
@keyframes fadeIn {
  @include keyframe-fadeIn;
}
@mixin fadeIn( $arg ) {
  $keyframe-name:fadeIn;
  $duration:$arg;
  @each $p in $prefix {
    #{$p}animation:$keyframe-name $duration;
  }
}
// e.g. @include fadeIn( 2s );

// ********************
// fadeIn70
// ********************

@mixin keyframe-fadeIn70 {
  0%   { opacity:0; }
  100% { opacity:0.7; }
}
@-moz-keyframes fadeIn70 {
  @include keyframe-fadeIn70;
}
@-webkit-keyframes fadeIn70 {
  @include keyframe-fadeIn70;
}
@-o-keyframes fadeIn70 {
  @include keyframe-fadeIn70;
}
@-ms-keyframes fadeIn70 {
  @include keyframe-fadeIn70;
}
@keyframes fadeIn70 {
  @include keyframe-fadeIn70;
}
@mixin fadeIn70( $arg ) {
  $keyframe-name:fadeIn70;
  $duration:$arg;
  @each $p in $prefix {
    #{$p}animation:$keyframe-name $duration;
  }
}
// e.g. @include fadeIn70( 2s );

// ********************
// fadeOut
// ********************

@mixin keyframe-fadeOut {
  0%   { opacity:1; }
  100% { opacity:0; }
}
@-moz-keyframes fadeOut {
  @include keyframe-fadeOut;
}
@-webkit-keyframes fadeOut {
  @include keyframe-fadeOut;
}
@-o-keyframes fadeOut {
  @include keyframe-fadeOut;
}
@-ms-keyframes fadeOut {
  @include keyframe-fadeOut;
}
@keyframes fadeOut {
  @include keyframe-fadeOut;
}
@mixin fadeOut( $arg ) {
  $keyframe-name:fadeOut;
  $duration:$arg;
  @each $p in $prefix {
    #{$p}animation:$keyframe-name $duration;
  }
}
// e.g. @include fadeIn( 2s );

// ********************
// fadeOut70
// ********************

@mixin keyframe-fadeOut70 {
  0%   { opacity:0.7; }
  100% { opacity:0; }
}
@-moz-keyframes fadeOut70 {
  @include keyframe-fadeOut70;
}
@-webkit-keyframes fadeOut70 {
  @include keyframe-fadeOut70;
}
@-o-keyframes fadeOut70 {
  @include keyframe-fadeOut70;
}
@-ms-keyframes fadeOut70 {
  @include keyframe-fadeOut70;
}
@keyframes fadeOut70 {
  @include keyframe-fadeOut70;
}
@mixin fadeOut70( $arg ) {
  $keyframe-name:fadeOut70;
  $duration:$arg;
  @each $p in $prefix {
    #{$p}animation:$keyframe-name $duration;
  }
}
// e.g. @include fadeOut70( 2s );